{"ast":null,"code":"var _jsxFileName = \"/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport { StreamChat } from \"stream-chat\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Cookies from \"universal-cookie\";\nimport Game from \"./components/Game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api_key = \"nv2zh5h8pmyh\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n\n  const removeAllCookies = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n  };\n\n  useEffect(() => {\n    const connect = async () => {\n      const client = StreamChat.getInstance(apiKey, {\n        enableInsights: true,\n        enableWSFallback: true\n      });\n      await client.connectUser({\n        id: cookies.get(\"userId\"),\n        name: cookies.get(\"username\"),\n        firstName: cookies.get(\"firstName\"),\n        lastName: cookies.get(\"lastName\"),\n        hashedPassword: cookies.get(\"hashedPassword\")\n      }, userToken);\n      setUser(client);\n    };\n\n    connect();\n    return () => client === null || client === void 0 ? void 0 : client.disconnectUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Game, {\n      client: client,\n      removeAllCookies: removeAllCookies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignUp, {\n        setUser: setUser,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/App.js"],"names":["useState","Board","StreamChat","SignUp","Login","Cookies","Game","api_key","App","user","setUser","cookies","token","get","client","getInstance","removeAllCookies","remove","useEffect","connect","apiKey","enableInsights","enableWSFallback","connectUser","id","name","firstName","lastName","hashedPassword","userToken","disconnectUser"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AACA,MAAMC,OAAO,GAAG,cAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AACA,QAAMO,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;AACA,QAAMC,MAAM,GAAGZ,UAAU,CAACa,WAAX,CAAuBR,OAAvB,CAAf;;AAEA,QAAMS,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,OAAO,CAACM,MAAR,CAAe,OAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,QAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,WAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,UAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,gBAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,aAAf;AACAN,IAAAA,OAAO,CAACM,MAAR,CAAe,UAAf;AACD,GARD;;AAUAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,OAAO,GAAG,YAAY;AAC1B,YAAML,MAAM,GAAGZ,UAAU,CAACa,WAAX,CAAuBK,MAAvB,EAA+B;AAC5CC,QAAAA,cAAc,EAAE,IAD4B;AAE5CC,QAAAA,gBAAgB,EAAE;AAF0B,OAA/B,CAAf;AAIA,YAAMR,MAAM,CAACS,WAAP,CACJ;AACEC,QAAAA,EAAE,EAAEb,OAAO,CAACE,GAAR,CAAY,QAAZ,CADN;AAEEY,QAAAA,IAAI,EAAEd,OAAO,CAACE,GAAR,CAAY,UAAZ,CAFR;AAGEa,QAAAA,SAAS,EAAEf,OAAO,CAACE,GAAR,CAAY,WAAZ,CAHb;AAIEc,QAAAA,QAAQ,EAAEhB,OAAO,CAACE,GAAR,CAAY,UAAZ,CAJZ;AAKEe,QAAAA,cAAc,EAAEjB,OAAO,CAACE,GAAR,CAAY,gBAAZ;AALlB,OADI,EAQJgB,SARI,CAAN;AAUAnB,MAAAA,OAAO,CAACI,MAAD,CAAP;AACD,KAhBD;;AAkBAK,IAAAA,OAAO;AAEP,WAAO,MAAML,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEgB,cAAR,EAAb;AACD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGlB,KAAK,gBACJ,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEE,MAAd;AAAsB,MAAA,gBAAgB,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,OAAjB;AAA0B,QAAA,IAAI,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApDQD,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport { StreamChat } from \"stream-chat\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Cookies from \"universal-cookie\";\nimport Game from \"./components/Game\";\nconst api_key = \"nv2zh5h8pmyh\";\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n\n  const removeAllCookies = () => {\n    cookies.remove(\"token\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"firstName\");\n    cookies.remove(\"lastName\");\n    cookies.remove(\"hashedPassword\");\n    cookies.remove(\"channelName\");\n    cookies.remove(\"username\");\n  };\n\n  useEffect(() => {\n    const connect = async () => {\n      const client = StreamChat.getInstance(apiKey, {\n        enableInsights: true,\n        enableWSFallback: true,\n      });\n      await client.connectUser(\n        {\n          id: cookies.get(\"userId\"),\n          name: cookies.get(\"username\"),\n          firstName: cookies.get(\"firstName\"),\n          lastName: cookies.get(\"lastName\"),\n          hashedPassword: cookies.get(\"hashedPassword\"),\n        },\n        userToken\n      );\n      setUser(client);\n    };\n\n    connect();\n\n    return () => client?.disconnectUser();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {token ? (\n        <Game client={client} removeAllCookies={removeAllCookies} />\n      ) : (\n        <>\n          <SignUp setUser={setUser} user={user} />\n          <Login />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}