{"ast":null,"code":"var _jsxFileName = \"/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport { StreamChat } from \"stream-chat\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api_key = \"nv2zh5h8pmyh\";\n\nfunction App() {\n  _s();\n\n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState({});\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n\n  if (token) {\n    client.connectUser({\n      id: cookies.get(\"userId\"),\n      username: cookies.get(\"username\"),\n      firstName: cookies.get(\"firstName\"),\n      lastName: cookies.get(\"lastName\"),\n      hashedPassword: cookies.get(\"hashedPassword\")\n    }, token);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isAuth ? /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignUp, {\n        setUser: setUser,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"InCWm1NSXjT5hDcNFPGqkcve3AU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/App.js"],"names":["useState","Board","StreamChat","SignUp","Login","Cookies","api_key","App","isAuth","setIsAuth","user","setUser","cookies","token","get","client","getInstance","connectUser","id","username","firstName","lastName","hashedPassword"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AACA,MAAMC,OAAO,GAAG,cAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACA,QAAMQ,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;AACA,QAAMC,MAAM,GAAGb,UAAU,CAACc,WAAX,CAAuBV,OAAvB,CAAf;;AAEA,MAAIO,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACE,WAAP,CACE;AACEC,MAAAA,EAAE,EAAEN,OAAO,CAACE,GAAR,CAAY,QAAZ,CADN;AAEEK,MAAAA,QAAQ,EAAEP,OAAO,CAACE,GAAR,CAAY,UAAZ,CAFZ;AAGEM,MAAAA,SAAS,EAAER,OAAO,CAACE,GAAR,CAAY,WAAZ,CAHb;AAIEO,MAAAA,QAAQ,EAAET,OAAO,CAACE,GAAR,CAAY,UAAZ,CAJZ;AAKEQ,MAAAA,cAAc,EAAEV,OAAO,CAACE,GAAR,CAAY,gBAAZ;AALlB,KADF,EAQED,KARF;AAUD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGL,MAAM,gBACL,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEG,OAAjB;AAA0B,QAAA,IAAI,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhCQH,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport { StreamChat } from \"stream-chat\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Cookies from \"universal-cookie\";\nconst api_key = \"nv2zh5h8pmyh\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState({});\n  const cookies = new Cookies();\n  const token = cookies.get(\"token\");\n  const client = StreamChat.getInstance(api_key);\n\n  if (token) {\n    client.connectUser(\n      {\n        id: cookies.get(\"userId\"),\n        username: cookies.get(\"username\"),\n        firstName: cookies.get(\"firstName\"),\n        lastName: cookies.get(\"lastName\"),\n        hashedPassword: cookies.get(\"hashedPassword\"),\n      },\n      token\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {isAuth ? (\n        <Board />\n      ) : (\n        <>\n          <SignUp setUser={setUser} user={user} />\n          <Login />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}