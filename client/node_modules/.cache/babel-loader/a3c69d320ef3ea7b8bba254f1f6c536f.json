{"ast":null,"code":"var _jsxFileName = \"/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport Cookies from \"universal-cookie\";\nimport \"stream-chat-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game(_ref) {\n  _s();\n\n  let {\n    removeAllCookies,\n    setIsAuth\n  } = _ref;\n  const [startGame, setStartGame] = useState(false);\n  const [user2, setUser2] = useState(false);\n  const [channelName, setChannelName] = useState(\"\");\n  const cookies = new Cookies();\n  const [channel, setChannel] = useState(client.channel(\"messaging\", cookies.get(\"channelName\")));\n\n  const deleteChannel = async () => {\n    const destroy = await channel.delete();\n  };\n\n  const createChannel = async () => {\n    try {\n      const response = await client.queryUsers({\n        name: {\n          $eq: user2\n        }\n      });\n\n      if (response.users.length === 0) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const newChannel = await client.channel(\"messaging\", {\n        members: [client.userID, response.users[0].id]\n      });\n      cookies.set(\"channelName\", channelName);\n      await newChannel.watch();\n      setChannel(newChannel);\n      setStartGame(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // const handleStartGame = async () => {\n  //   if (channel) {\n  //     await channel.sendEvent({\n  //       type: \"send-message\",\n  //       text: \"Bruhhhhhhh\",\n  //     });\n  //   }\n  //   // setStartGame(true);\n  // };\n  // if (channel) {\n  // useEffect(() => {\n  //   const initializeChannel = async () => {\n  //     // if (channel) {\n  //     const channel = client.channel(\"messaging\", channelName);\n  //     await channel.watch();\n  //   };\n  //   initializeChannel();\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: startGame ? /*#__PURE__*/_jsxDEV(Board, {\n      channel: channel,\n      client: client\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Create A Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Username of your rival...\",\n          onChange: event => {\n            setUser2(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createChannel,\n          children: \"Start/Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          client.disconnectUser();\n          removeAllCookies();\n          setIsAuth(false);\n        },\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"zrDoCUgesRUAwTcWm33vR5Cmz9k=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/components/Game.js"],"names":["React","useEffect","useState","Board","Cookies","Game","removeAllCookies","setIsAuth","startGame","setStartGame","user2","setUser2","channelName","setChannelName","cookies","channel","setChannel","client","get","deleteChannel","destroy","delete","createChannel","response","queryUsers","name","$eq","users","length","alert","newChannel","members","userID","id","set","watch","error","console","log","event","target","value","disconnectUser"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport Cookies from \"universal-cookie\";\nimport {} from \"stream-chat-react\";\n\nfunction Game({ removeAllCookies, setIsAuth }) {\n  const [startGame, setStartGame] = useState(false);\n  const [user2, setUser2] = useState(false);\n  const [channelName, setChannelName] = useState(\"\");\n  const cookies = new Cookies();\n\n  const [channel, setChannel] = useState(\n    client.channel(\"messaging\", cookies.get(\"channelName\"))\n  );\n\n  const deleteChannel = async () => {\n    const destroy = await channel.delete();\n  };\n  const createChannel = async () => {\n    try {\n      const response = await client.queryUsers({\n        name: { $eq: user2 },\n      });\n\n      if (response.users.length === 0) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const newChannel = await client.channel(\"messaging\", {\n        members: [client.userID, response.users[0].id],\n      });\n      cookies.set(\"channelName\", channelName);\n      await newChannel.watch();\n\n      setChannel(newChannel);\n      setStartGame(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // const handleStartGame = async () => {\n  //   if (channel) {\n  //     await channel.sendEvent({\n  //       type: \"send-message\",\n  //       text: \"Bruhhhhhhh\",\n  //     });\n  //   }\n  //   // setStartGame(true);\n  // };\n\n  // if (channel) {\n\n  // useEffect(() => {\n  //   const initializeChannel = async () => {\n  //     // if (channel) {\n  //     const channel = client.channel(\"messaging\", channelName);\n  //     await channel.watch();\n  //   };\n  //   initializeChannel();\n  // }, []);\n  return (\n    <div>\n      {startGame ? (\n        <Board channel={channel} client={client} />\n      ) : (\n        <>\n          <div>\n            <h4> Create A Game</h4>\n            <input\n              placeholder=\"Username of your rival...\"\n              onChange={(event) => {\n                setUser2(event.target.value);\n              }}\n            />\n\n            <button onClick={createChannel}>Start/Join Game</button>\n          </div>\n\n          <button\n            onClick={() => {\n              client.disconnectUser();\n              removeAllCookies();\n              setIsAuth(false);\n            }}\n          >\n            Log Out\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}