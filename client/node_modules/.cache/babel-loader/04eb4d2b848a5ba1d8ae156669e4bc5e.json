{"ast":null,"code":"var _jsxFileName = \"/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport { Patterns } from \"../Patterns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    channel,\n    client\n  } = _ref;\n  const [playersJoined, setPlayersJoined] = useState(channel.state.watcher_count === 2);\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  }); // useEffect(() => {\n  //   checkWin();\n  //   checkIfTie();\n  // }, [board]);\n  // useEffect(() => {\n  //   if (result.state != \"none\") {\n  //     alert(`Game Finished! Winning Player: ${result.winner}`);\n  //     //   restartGame();\n  //   }\n  // }, [result]);\n\n  useEffect(() => {\n    console.log(\"Player: \", player);\n    console.log(\"Turn: \", turn);\n  }, [player, turn]);\n\n  const chooseSquare = async square => {\n    if (turn === player && board[square] === \"\") {\n      setTurn(player === \"X\" ? \"O\" : \"X\");\n      await channel.sendEvent({\n        type: \"game-move\",\n        data: {\n          square,\n          player: player\n        }\n      });\n      setBoard(board.map((val, idx) => {\n        if (idx == square && val == \"\") {\n          return player;\n        }\n\n        return val;\n      }));\n    }\n  };\n\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({\n          winner: player,\n          state: \"Won\"\n        });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach(square => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({\n        winner: \"No One\",\n        state: \"Tie\"\n      });\n    }\n  };\n\n  channel.on(event => {\n    if (event.type === \"game-move\" && event.user.id !== client.userID) {\n      const play = event.data.player === \"X\" ? \"O\" : \"X\";\n      setPlayer(play);\n      setTurn(play);\n      setBoard(board.map((val, idx) => {\n        if (idx == event.data.square && val == \"\") {\n          return event.data.player;\n        }\n\n        return val;\n      }));\n    }\n  });\n  channel.on(\"user.watching.start\", event => {\n    setPlayersJoined(event.watcher_count === 2);\n  });\n\n  if (!playersJoined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Waiting for other player to join...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[0],\n        chooseSquare: () => {\n          chooseSquare(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[1],\n        chooseSquare: () => {\n          chooseSquare(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[2],\n        chooseSquare: () => {\n          chooseSquare(2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[3],\n        chooseSquare: () => {\n          chooseSquare(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[4],\n        chooseSquare: () => {\n          chooseSquare(4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[5],\n        chooseSquare: () => {\n          chooseSquare(5);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[6],\n        chooseSquare: () => {\n          chooseSquare(6);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[7],\n        chooseSquare: () => {\n          chooseSquare(7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[8],\n        chooseSquare: () => {\n          chooseSquare(8);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"/cfbO5VgFAv+ojW77q0iqK1eXJs=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/client/src/components/Board.js"],"names":["React","useState","useEffect","Square","Patterns","Board","channel","client","playersJoined","setPlayersJoined","state","watcher_count","board","setBoard","player","setPlayer","turn","setTurn","result","setResult","winner","console","log","chooseSquare","square","sendEvent","type","data","map","val","idx","checkWin","forEach","currPattern","firstPlayer","foundWinningPattern","checkIfTie","filled","on","event","user","id","userID","play"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport { Patterns } from \"../Patterns\";\n\nfunction Board({ channel, client }) {\n  const [playersJoined, setPlayersJoined] = useState(\n    channel.state.watcher_count === 2\n  );\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n\n  // useEffect(() => {\n  //   checkWin();\n  //   checkIfTie();\n  // }, [board]);\n\n  // useEffect(() => {\n  //   if (result.state != \"none\") {\n  //     alert(`Game Finished! Winning Player: ${result.winner}`);\n  //     //   restartGame();\n  //   }\n  // }, [result]);\n\n  useEffect(() => {\n    console.log(\"Player: \", player);\n    console.log(\"Turn: \", turn);\n  }, [player, turn]);\n  const chooseSquare = async (square) => {\n    if (turn === player && board[square] === \"\") {\n      setTurn(player === \"X\" ? \"O\" : \"X\");\n      await channel.sendEvent({\n        type: \"game-move\",\n        data: { square, player: player },\n      });\n      setBoard(\n        board.map((val, idx) => {\n          if (idx == square && val == \"\") {\n            return player;\n          }\n          return val;\n        })\n      );\n    }\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach((square) => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  channel.on((event) => {\n    if (event.type === \"game-move\" && event.user.id !== client.userID) {\n      const play = event.data.player === \"X\" ? \"O\" : \"X\";\n      setPlayer(play);\n      setTurn(play);\n      setBoard(\n        board.map((val, idx) => {\n          if (idx == event.data.square && val == \"\") {\n            return event.data.player;\n          }\n          return val;\n        })\n      );\n    }\n  });\n\n  channel.on(\"user.watching.start\", (event) => {\n    setPlayersJoined(event.watcher_count === 2);\n  });\n\n  if (!playersJoined) {\n    return <div>Waiting for other player to join...</div>;\n  }\n\n  return (\n    <div className=\"board\">\n      <div className=\"row\">\n        <Square\n          val={board[0]}\n          chooseSquare={() => {\n            chooseSquare(0);\n          }}\n        />\n        <Square\n          val={board[1]}\n          chooseSquare={() => {\n            chooseSquare(1);\n          }}\n        />\n        <Square\n          val={board[2]}\n          chooseSquare={() => {\n            chooseSquare(2);\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <Square\n          val={board[3]}\n          chooseSquare={() => {\n            chooseSquare(3);\n          }}\n        />\n        <Square\n          val={board[4]}\n          chooseSquare={() => {\n            chooseSquare(4);\n          }}\n        />\n        <Square\n          val={board[5]}\n          chooseSquare={() => {\n            chooseSquare(5);\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <Square\n          val={board[6]}\n          chooseSquare={() => {\n            chooseSquare(6);\n          }}\n        />\n        <Square\n          val={board[7]}\n          chooseSquare={() => {\n            chooseSquare(7);\n          }}\n        />\n        <Square\n          val={board[8]}\n          chooseSquare={() => {\n            chooseSquare(8);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}