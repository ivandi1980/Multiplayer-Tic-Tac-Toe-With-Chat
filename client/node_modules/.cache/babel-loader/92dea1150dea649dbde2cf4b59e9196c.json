{"ast":null,"code":"var _jsxFileName = \"/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n\n  const chooseSquare = square => {\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        return player;\n      }\n\n      return val;\n    }));\n  };\n\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({\n          winner: player,\n          state: \"Won\"\n        });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach(square => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({\n        winner: \"No One\",\n        state: \"Tie\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[0],\n        chooseSquare: () => {\n          chooseSquare(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[1],\n        chooseSquare: () => {\n          chooseSquare(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[2],\n        chooseSquare: () => {\n          chooseSquare(2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[3],\n        chooseSquare: () => {\n          chooseSquare(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[4],\n        chooseSquare: () => {\n          chooseSquare(4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[5],\n        chooseSquare: () => {\n          chooseSquare(5);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[6],\n        chooseSquare: () => {\n          chooseSquare(6);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[7],\n        chooseSquare: () => {\n          chooseSquare(7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[8],\n        chooseSquare: () => {\n          chooseSquare(8);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"Yh6anp2/7yCTqV/eLvoLB3+rFI0=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/pedrohenriquemachado/Documents/Projects/multi-tic-tac-toe/src/components/Board.js"],"names":["React","useState","Square","Board","board","setBoard","player","setPlayer","result","setResult","winner","state","useEffect","checkWin","checkIfTie","chooseSquare","square","map","val","idx","Patterns","forEach","currPattern","firstPlayer","foundWinningPattern","filled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Square from \"./Square\";\n\nfunction Board() {\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n  const chooseSquare = (square) => {\n    setBoard(\n      board.map((val, idx) => {\n        if (idx == square && val == \"\") {\n          return player;\n        }\n        return val;\n      })\n    );\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach((square) => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"row\">\n        <Square\n          val={board[0]}\n          chooseSquare={() => {\n            chooseSquare(0);\n          }}\n        />\n        <Square\n          val={board[1]}\n          chooseSquare={() => {\n            chooseSquare(1);\n          }}\n        />\n        <Square\n          val={board[2]}\n          chooseSquare={() => {\n            chooseSquare(2);\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <Square\n          val={board[3]}\n          chooseSquare={() => {\n            chooseSquare(3);\n          }}\n        />\n        <Square\n          val={board[4]}\n          chooseSquare={() => {\n            chooseSquare(4);\n          }}\n        />\n        <Square\n          val={board[5]}\n          chooseSquare={() => {\n            chooseSquare(5);\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <Square\n          val={board[6]}\n          chooseSquare={() => {\n            chooseSquare(6);\n          }}\n        />\n        <Square\n          val={board[7]}\n          chooseSquare={() => {\n            chooseSquare(7);\n          }}\n        />\n        <Square\n          val={board[8]}\n          chooseSquare={() => {\n            chooseSquare(8);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}